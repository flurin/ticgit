#!/usr/bin/env ruby

# starts a sinatra based web server that provides an interface to 
# your ticgit tickets
# 
# some of the sinatra code borrowed from sr's git-wiki
#
# author: Flurin Egger
# original author : Scott Chacon (schacon@gmail.com)
#

def require_dependency_with_check(dependency)
  begin
    require dependency
  rescue LoadError => e
    puts "You need to install #{dependency} before we can proceed"
  end
end

require_dependency_with_check 'rubygems'

# We need a sinatra version bigger than 0.3.1
gem 'sinatra', ">= 0.3.1"

%w(sinatra git ticgit haml sass).each do |dependency| 
  require_dependency_with_check dependency
end


configure do
  enable :sessions
end
use_in_file_templates!

# !! TODO : if ARGV[1] is a path to a git repo, use that
# otherwise, look in ~/.ticgit

$ticgit = TicGit.open('.')

# Always load saved searches. (used in navigation)
before do
  @saved = $ticgit.config['list_options'].keys rescue []
end

# Stylesheets
get('/_stylesheet.css') do
  header("Content-Type" =>  "text/css;charset=utf-8")
  sass :stylesheet_all
end
get('/_print.css') do
  header("Content-Type" =>  "text/css;charset=utf-8")
  sass :stylesheet_print
end

# ticket list view
get '/' do
  @tickets = $ticgit.ticket_list(:order => 'date.desc')
  store_list_url!  
  haml :list, :locals => {:title => "All tickets"}
end

get '/fs/:state' do
  @tickets = $ticgit.ticket_list(:state => params[:state], :order => 'date.desc')
  store_list_url!  
  haml :list, :locals => {:title => "#{params[:state].to_s.capitalize} tickets"}  
end

get '/tag/:tag' do
  @tickets = $ticgit.ticket_list(:tag => params[:tag], :order => 'date.desc')
  store_list_url!  
  haml :list, :locals => {:title => "All tickets with tag '#{params[:tag]}'"}
end

get '/sv/:saved_view' do
  @tickets = $ticgit.ticket_list(:saved => params[:saved_view])
  store_list_url!  
  haml :list, :locals => {:title => "All tickets in view '#{params[:saved_view]}'"}  
end

# ticket single view
get '/ticket/:ticket' do
  @ticket = $ticgit.ticket_show(params[:ticket])
  haml :show, :locals => {:title => "Ticket #{@ticket.ticket_id}"}
end

# update ticket
put '/ticket/:ticket' do
  @ticket = $ticgit.ticket_show(params[:ticket])
  if params[:state] && $ticgit.tic_states.include?(params[:state]) && @ticket.state != params[:state]
    @ticket.change_state(params[:state])
  end
  if params[:tags]
    current_tags = @ticket.tags
    posted_tags = params[:tags].split(",").map{|s| s.strip }
    tags_to_remove = current_tags - posted_tags
    tags_to_add = posted_tags - current_tags
    tags_to_remove.each{|t| @ticket.remove_tag(t) }
    tags_to_add.each{|t| @ticket.add_tag(t) }
  end
  $ticgit.reset_ticgit
  
  redirect "/ticket/#{@ticket.ticket_id}"
end


# add ticket
get '/t/new' do
  haml :new, :locals => {:title => "Create new ticket"}
end

# add ticket finalize
post '/t/new' do
  title = params[:title].to_s.strip
  if title.size > 1
    tags = params[:tags].split(',').map { |t| t.strip } rescue nil  
    t = $ticgit.ticket_new(title, {:description => params[:description].strip, :tags => tags})
    if params[:addmore]
      redirect '/t/new?addmore=true'
    else
      redirect session[:recent_list_url] || "/"
    end
  else
    redirect '/t/new'
  end
end

# add comment
post '/a/add_comment/:ticket' do
  t = $ticgit.ticket_comment(params[:comment], params[:ticket])
  redirect '/ticket/' + params[:ticket]
end

# add tag
post '/a/add_tags/:ticket' do
  t = $ticgit.ticket_tag(params[:tags], params[:ticket])
  redirect '/ticket/' + params[:ticket]
end

# change ticket state
get '/a/change_state/:ticket/:state' do
  $ticgit.ticket_change(params[:state], params[:ticket])
  
  if ["resolved","invalid"].include?(params[:state]) && session[:recent_list_url]
    # If the ticket is resolved or invalid return to the last listview
    redirect session[:recent_list_url]
  else
    redirect '/ticket/' + params[:ticket]
  end
end

## Helper methods

# 
def store_list_url!
  session[:recent_list_url] = request.fullpath
end


__END__
@@ layout
:plain
  <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
%html{:xmlns => "http://www.w3.org/1999/xhtml", "xml:lang" =>  "en", :lang=>"en"}
  %head
    %title= title
    %link{:rel => 'stylesheet', :href => '/_stylesheet.css', :type => 'text/css', :media => 'all'}
    %link{:rel => 'stylesheet', :href => '/_print.css', :type => 'text/css', :media => 'print'}    
    %meta{'http-equiv' => 'Content-Type', :content => 'text/html; charset=utf-8'}
  %body
    #wrapper
      #action
        %a{:href => '/t/new'} New Ticket    
      %ul#navigation        
        %li 
          %a{:href => '/'} All
        %li 
          %a{:href => '/fs/open'} Open
        %li 
          %a{:href => '/fs/resolved'} Resolved
        %li 
          %a{:href => '/fs/hold'} Hold
        %li 
          %a{:href => '/fs/invalid'} Invalid
        - if @saved && !@saved.empty?
          %li | Saved:
          %ul.saved
          - @saved.each do |s|
            %li 
              %a{:href => "/sv/\#{s}"}= s

      = yield

@@ list
%h1= title
- if @tickets.empty?
  %p No tickets found.
- else
  %table.long
    %thead
      %tr
        %th SHA
        %th.ticket Ticket
        %th State
        %th Created&nbsp;at
        %th Created&nbsp;by
        %th Tags
    %tbody
      - c = 'even'
      - @tickets.each do |t|
        %tr{:class => (c == 'even' ? c = 'odd' : c = 'even') }
          %td
            %a{:href => "/ticket/#{t.ticket_id}" }
              %code= t.ticket_id[0,6]
          %td
            %strong
              %a{:href => "/ticket/#{t.ticket_id}" }= t.title
            .content~ t.description
          %td
            %span{:class => "state " + t.state, :style => "float: left;"}= t.state
          %td= t.opened.strftime("%m/%d")
          %td= t.assigned_name
          %td
            - t.tags.each do |tag|
              %a.tag{:href => "/tag/#{tag}"}= tag

@@ show
%h1
  = @ticket.title
.meta
  %span{:class => "state " + @ticket.state}= @ticket.state
  Ticket:
  = @ticket.ticket_id
  %br
  opened at
  %em= @ticket.opened.strftime("%Y-%m-%d")
  assigned to 
  %em= @ticket.assigned
  tagged with
  - @ticket.tags.each do |t|
    %a.tag{:href => "/tag/#{t}"}= t
  
.content~ @ticket.description
%hr/
%form{:action => "/ticket/#{@ticket.ticket_id}", :method => 'post'}
  %input{:type => "hidden", :name => "_method", :value => "put"}
  %table.twocol
    %tr
      %th State
      %td
        %select{:name => "state", :id => "ticket_state"}
          - $ticgit.tic_states.each do |ts|
            %option{:value => ts , :selected => (@ticket.state == ts ? "selected" : nil)}= ts
    %tr
      %th 
        Tags
        %small (comma delimited)        
      %td
        %textarea{:rows => 2, :name => "tags",  :style => "width: 50%"}= @ticket.tags.join(", ")
    %tr
      %th
      %td
        %div.submit
          %input{:type => 'submit', :value => 'Save ticket'}

%h3 Comments
    
%div.comments
  - @ticket.comments.reverse.each do |t|
    %div.comment
      %span.head
        Added
        = t.added.strftime("%m/%d %H:%M")
        by
        = t.user
    %div.comment-text
      = t.comment
    %br

%form{:action => "/a/add_comment/#{@ticket.ticket_id}", :method => 'post'}
  %h4 Add comment
  %textarea{:name => 'comment', :cols => 50}
  .submit  
    %input{:type => 'submit', :value => 'add comment'}


@@ new
%h1 Create a New Ticket
%form{:action => '/t/new', :method => 'post'}
  %table
    %tr
      %th Title
      %td 
        %input{:type => 'text', :name => 'title', :size => 30, :style => "width: 100%"}
    %tr
      %th Description
      %td 
        %textarea{:rows => 15, :cols => 30, :name => 'description', :style => "width: 100%"}              
    %tr
      %th 
        %span Tags
        %small (comma delimited)
      %td
        %textarea{:name => 'tags', :rows => 2, :style => "width: 50%"}
    %tr
      %th 
      %td
        %label{:for => "addmore"} 
          %input{:type => "checkbox", :value => "1",:id => "addmore", :name => "addmore", :checked => (params["addmore"] ? "checked" : nil)}
          %span Add another ticket
    %tr
      %td
      %td
        %input{:type => 'submit', :value => 'Create Ticket'}

@@ stylesheet_all
body
  :font
    family: Verdana, Arial, "Bitstream Vera Sans", Helvetica, sans-serif
    color: black
    size: 62.5%
  line-height: 1.2
  background-color: white
  margin: 2em

#wrapper
  font-size: 1.2em
  width: 90%
  margin: 0 auto

// Autoclearing
#navigation:after
  content: "."
  visibility:  hidden
  clear: both
  display: block
  height: 0px

// IE autoclearing
#navigation
  zoom: 1

#navigation
  li
    float: left
    margin-right: 0.5em
    a
      background-color: #e0e0e0
      color: black
      text-decoration: none
      padding: 2px
  margin: 0
  list-style: none
  padding: 5px
  border-bottom: 1px black solid
  
#action
  text-align: right
  float: right
  a
    background: #005
    padding: 5px 10px
    font-weight: bold
    color: #fff
    float: left
  
.addtag
  padding: 5px 0
  clear: both
  
h1
  display: block
  padding-bottom: 5px
  margin-bottom: 0

h4
  margin: 0 0 0.5em 0

div.meta
  margin-bottom: 1em
  display: block
  font-size: 0.9em
  font-weight: normal
  color: #666
  em
    color: #000
    font-style: normal
    font-weight: bold
  a.tag
    font-size: 1em
    float: none
    background: #eee
    color: #000
  span.state
    float: left
    margin-right: 1em
    color: #000

div.content
  padding-top: 1em
  clear: both

form
  padding: 10px
  background: #f2f2f2
  table
    width: 100%
    tr
      th
        width: 20%
      th,td
        border-bottom: none
  .submit
    margin: 0.5em 0 0 0

a
  color: black
a.exists
  font-weight: bold
a.unknown
  font-style: italic

a.tag
  padding: 2px 5px
  background: #888
  color: #fff
  font-weight: normal
  font-size: 80%
  float: left
  margin: 1px 2px
  text-decoration: none

.comments
  margin: 10px 0px
  .comment
    .head
      font-weight: bold
      display: block
      padding: 4px
  .comment-text
    padding: 4px
    padding-bottom: 10px
    color: #333
    border-bottom: 1px solid #aaa
  
table.long
  width: 100%
  .content
    padding: 0


// States
span.state
  padding: 3px

span.open
  background: #ada
span.resolved
  background: #abd
span.hold
  background: #dda
span.invalid
  background: #aaa  


table
  font-size: 100%
  border-collapse: collapse
  th
    small
      font-weight: normal
  td,th
    vertical-align: top
  tr.even
    td
      background: #eee
  tr.odd
    td
      background: #fff
      
table
  tr
    td,th
      padding: 3px 5px  
      border-bottom: 1px solid #fff
    th
      text-align: left
      vertical-align: top
    th.ticket
      width: 50%

strong a
  text-decoration: none

table
  thead
    tr
      td,th
        border-bottom: 1px solid #000
      
.submit
  font-size: large
  font-weight: bold

.page_title
  font-size: xx-large

.edit_link
  color: black
  font-size: 14px
  font-weight: bold
  background-color: #e0e0e0
  font-variant: small-caps
  text-decoration: none

@@ stylesheet_print
#navigation, #action
  display: none
  
table
  tr.odd, tr.even
    td
      border-bottom: 1px solid #ddd